[
    {
        "id": 1,
        "subject": "determine-the-winner-of-a-bowling-game",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 2,
        "subject": "determine-the-winner-of-a-bowling-game",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 3,
        "subject": "determine-the-winner-of-a-bowling-game",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 4,
        "subject": "determine-the-winner-of-a-bowling-game",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 5,
        "subject": "determine-the-winner-of-a-bowling-game",
        "bug_id": "5",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 6,
        "subject": "find-the-maximum-divisibility-score",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 7,
        "subject": "find-the-maximum-divisibility-score",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 8,
        "subject": "find-the-maximum-divisibility-score",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 9,
        "subject": "find-the-maximum-divisibility-score",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 10,
        "subject": "find-the-maximum-divisibility-score",
        "bug_id": "5",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1,2",
        "passing_test": "0",
        "count_neg": "3",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 11,
        "subject": "find-the-width-of-columns-of-a-grid",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "0",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 12,
        "subject": "find-the-width-of-columns-of-a-grid",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "0",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 13,
        "subject": "find-the-width-of-columns-of-a-grid",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "0",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 14,
        "subject": "find-the-width-of-columns-of-a-grid",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "0",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 15,
        "subject": "find-the-width-of-columns-of-a-grid",
        "bug_id": "5",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "0",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Easy"
    },
    {
        "id": 16,
        "subject": "prime-pairs-with-target-sum",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0",
        "passing_test": "1",
        "count_neg": "1",
        "count_pos": "1",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 17,
        "subject": "prime-pairs-with-target-sum",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0",
        "passing_test": "1",
        "count_neg": "1",
        "count_pos": "1",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 18,
        "subject": "prime-pairs-with-target-sum",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0",
        "passing_test": "1",
        "count_neg": "1",
        "count_pos": "1",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 19,
        "subject": "prime-pairs-with-target-sum",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0",
        "passing_test": "1",
        "count_neg": "1",
        "count_pos": "1",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 20,
        "subject": "ways-to-split-array-into-good-subarrays",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 21,
        "subject": "ways-to-split-array-into-good-subarrays",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 22,
        "subject": "ways-to-split-array-into-good-subarrays",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 23,
        "subject": "ways-to-split-array-into-good-subarrays",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "1",
        "passing_test": "0",
        "count_neg": "1",
        "count_pos": "1",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 24,
        "subject": "ways-to-split-array-into-good-subarrays",
        "bug_id": "5",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 25,
        "subject": "special-permutations",
        "bug_id": "1",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 26,
        "subject": "special-permutations",
        "bug_id": "2",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 27,
        "subject": "special-permutations",
        "bug_id": "3",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    },
    {
        "id": 28,
        "subject": "special-permutations",
        "bug_id": "4",
        "source_file": "solution.py",
        "line_numbers": [],
        "failing_test": "0,1",
        "passing_test": "",
        "count_neg": "2",
        "count_pos": "0",
        "binary_path": "",
        "crash_input": "",
        "exploit_file_list": [],
        "test_timeout": 5,
        "bug_type": "",
        "difficulty": "Medium"
    }
]